// You have a business with several offices; you want to lease phone lines to connect them
// up with each other; and the phone company charges different amounts of money to
// connect different pairs of cities. You want a set of lines that connects all your offices
// with a minimum total cost. Solve the problem by suggesting appropriate data structures.

#include<iostream>
using namespace std;

int main(){
	int n,i,j,k,row,col,mincost=0,min;
	char op;
	cout<<"Enter the number of cities :"<<endl;
	int cost[n][n];
	int visit[n];
	for(i=0;i<n;i++){
		visit[i]=0;
	}
	for(i=0;i<n;i++){
		for(j=0;j<n;j++){
			cost[i][j]=-1;
		}
	}
	for(i=0;i<n;i++){
		for(j=i+1,j<n;j++){
			cout<<" Do you want a connection between city "<<i+1<<" And city "<<j+1<<endl;
			cic>>op;
			if(op=='y'|| op=='Y'){
				cout<<"Enter the Weight :"<<endl;
				cin>>cost[i][j];
				cost[j][i]=cost[i][j];
			}
		}
	}
	visit[0]=1;
	for(k=0;k<n-1;k++){
		min=999;
		for(i=0;i<n;i++){
			for(j=0;j<n;j++){
				if(visit[i]==1&& visit[j]==0){
					if(cost[i][j]!=-1 && min>cost[i][j]){
						min=cost[i][j];
						row=i;
						col=j;
					}
				}
			}
		}
		mincost+=min;
		visit[col]=1;
		cost[row][col]=cost[col][row];
		cout<<row+1<<"->"<<col+1<<endl;
	}
	cout<<"Min-cost ="<<mincost;
	return 0;
}

/ Thanks for referring program done by Avishkar .
